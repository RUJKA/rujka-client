Console variables (cvars):

Example mask:
cvarName               [value] Explanation (requirement/limitation):
                        value = explanation
? - integer(1337), ?.? - float(13.37), text - path/name/filename("mme/shader", "captureName"),
?..? - range(0..2), xHEXCOL - colour in hexadecimal representation (x00d52f)(0..f)

JAMME CLIENT GAME

mme_demoFileName        [text] Resets when loading demo, uses demo name from current demo; use for saving pathes:
                        project/[mme_demoFileName]/, capture/[mme_demoFileName]/
mov_absorbShader        [0, 1] Make force absorb shader look like force protect shader
mov_chatBeep            [0, 1] Turn off/on chat beep sound
mov_seekInterval        [0..?.?] Set time interval in seconds that will be used in demo seeking
mov_deltaYaw            [-?.?..?.?] Add additional angle in degrees around horizontal left-to-right axis (doesn't affect trueview)
mov_deltaPitch          [-?.?..?.?] Add additional angle in degrees around vertical axis (doesn't affect trueview)
mov_deltaRoll           [-?.?..?.?] Add additional angle in degrees around horizontal back-to-forward axis (doesn't affect trueview)
mov_chaseRange          [0..?.?] Range of chase camera distance when chase camera switches to entity pov
mov_simpleFlags         [0, 1] Replace flags from CTF with 2d images
mov_captureCamera       [0, 1] Capture camera postion, angles and fov to a data file
mov_captureCvars        [text] Save cvars and their values into current project in format mov_captureCvars "cvar cvar cvar"
mov_captureName         [text] Set a name for outputs
mov_captureFPS          [1..?] Set desired frame rate in frames per second for future video
mov_fragsOnly           [0, 1, 2] Hide 2d except frag message and awards:
                        0 = disabled, 1 = only frag message and awards, 2 = frag message, awards and snipe scope if sniping
mov_duelShell           [0, 1] Hide/show shell around players who are in engage_duel mode
mov_duelIsolation       [0, 1] Show/hide everyone who isn't in engage_duel mode
mov_saberTeamColour     [0, 1] Sabers colours will use team colour (red and blue) or their own
mov_soundDisable        [0, bit-field: 1..2097152] Disable selected sounds:
                        0 = all sounds enabled, 1 = jump, 2 = roll, 4 = saber,
                        8 = force looping sounds (absorb, rage, speed, protect, seeing), 16 = force,
                        32 = weapons, 64 = rewards, 128 = announcer, 256 = steps, 512 = chat beep, 1024 = voice chat,
                        2048 = ambience, 4096 = taunts, 8192 = water (coming in/out), 16384 = picked items,
                        32768 = zoom, 65536 = teleport/spawn, 131072 = falling, 262144 = entities,
                        524288 = pain/death, 1048576 = all looping sounds, 2097152 = jetpack
mov_wallhack            [0, bit-field: 1..8] See selected entities through walls:
                        0 = disabled, 1 = see the predicted client, 2 = see everyone except the predicted client,
                        4 = see all projectiles (rockets, grenades, blaster shots etc), 8 = see pickable items, 16 = see flags
mov_filterMask          [0, bit-field: 1..8] Hide selected entities:
                        0 = everything is visible, 1 = hide the predicted client, 2 = hide everyone except the predicted client,
                        4 = hide all projectiles (rockets, grenades, blaster shots etc), 8 = hide pickable items, 16 = hide flags
mov_musicFile           [text] Play MP3 or WAV file from either "mme" or "base" folder, or from a subfolder in format:
                        filename or subfolder/subfolder/filename
mov_musicStart          [-?..?] Offset music start time in seconds
mov_ratioFix            [0, 1] Use ratio fix for non-4:3 resolutions; disable if it makes custom HUD look wrong
mov_smoothQuat          [0, 1..?.?] Use smooth interpolation with acceleration effect:
                        0 = disabled, linear velocity, >=1 = enabled, factor of precision (higher - smoother, fps can start dropping over 100)
mov_absorbVisibility    [0, 1] Make absorb effect always visible if it's enabled on other clients
mov_absorbColour        [0..9, a..t, xHEXCOL] Set a colour for absorb shield
mov_protectColour       [0..9, a..t, xHEXCOL] Set a colour for protect shield
mov_rageColour          [0..9, a..t, xHEXCOL] Set a colour for rage shield
mov_spLightning         [0, 1] Use force lightning looping sound from SP
mov_headTurn            [0, 1] Let the players' heads turn toward other players

fx_Vibrate              [-1, 0..?.?] Set power of camera shake: -1 = no shake, 0 = default shake, >0 = mme style shake
fx_vfps                 [1..1000] Fix for effects that could disappear or effects that look too bright
fx_disruptTime          [-1, 0..?] Set time in milliseconds for disruptor shot lifetime:
                        -1 = default time, >=0 = custom time
fx_disruptSpiral        [0, 1] Use disruptor spiral
fx_disruptTeamColour    [0, 1] Use team colours (red and blue) for disruptor spiral and core (fx_disruptSpiral 1)
fx_disruptCoreColor     [0..9, a..t, xHEXCOL] Set a colour for disruptor core (fx_disruptSpiral 1)
fx_disruptSpiralColor   [0..9, a..t, xHEXCOL] Set a colour for disruptor spiral (fx_disruptSpiral 1)


REMADE/ADDED
cg_drawRewards          [0, 1, 2] Show awards (rewards assets):
                        0 = disabled, 1 = all enabled (wroks wrong on all current(sept 2013) mods), 2 = only ctf awards
cg_saberTrail           [0, 1, 2, 3, 4] Saber trail type:
                        0 = disabled, 1 = enabled, 2 = saber style with distortion (cg_shadows != 2),
                        3 = same as 1 but visible even if a player uses force speed and cg_speedTrail 0, 4 = always visible
cg_draw2D               [0, 1, 2, 3] Show 2D images on screen:
                        0 = hide all images, 1 = show all images, 2 = show all images and show chatbox if camera is not locked to any player
                        3 = same as 2 but shows underwater visual effect in either camera mode or in frags only mode (mov_fragsOnly > 0)
cg_thirdPerson          [0, 1, 2] Set thridperson view:
                        0 - disabled, 1 - regular way, 2 - q3-style way
cg_commandSmooth        [0, 1, 2] Set clients' movements smoothing:
                        0 = disabled, 1 = enabled for the predicted client only, 2 = enabled for all clients
cg_drawSpeed            [0, 1, 2, 3, 4] Show speedometer:
                        0 = disabled, 1 = regular speedometer, >1 = enhanced speedometer

NEW FROM JA++ (WORKS FOR ALL)
cg_newFX                [0, bit-field: 1..16] Use new effects:
                        1 = desintegration fx, 2 = disruptor fx, 4 = alt repeater fx, 8 = simple flag, 16 = transparent flag
cg_trueGuns             [0, 1] Use a realistic view for guns in first person
cg_trueRoll             [0, 1, 2] Affect the camera's roll in trueview:
                        0 = disabled, 1 = simple, 2 = advanced
cg_trueFlip             [0, 1, 2] Affect the camera's pitch in trueview:
                        0 = disabled, 1 = simple, 2 = advanced
cg_trueSpin             [0, 1, 2] Affect the camera's yaw in trueview:
                        0 = disabled, 1 = simple, 2 = advanced
cg_trueMoveRoll         [0, 1] Affect the camera's roll in trueview for all animations
cg_trueSaber            [0, 1] Use a realistic view for saber in first person
cg_trueMelee            [0, 1] Use a realistic view for melee in first person
cg_trueEyePosition      [-4..4] Offset your eye position by back-to-forward axis to avoid camera clipping in trueview
cg_trueFOV              [40..180] Set field of view for trueview
cg_drawMovementKeys     [0, 1] Show movement keys on screen
cg_drawMovementKeysPos  [?.? ?.?] Set desired horizontal and vertical position of the movement keys (cg_drawMovementKeys 1)
cg_drawMovementKeysScale [0.0..?.?] Set scale for the movement keys images

JA+ & JA++; FOR DEMOS THAT HAVE BEEN RECORDED ON JA+ SERVERS
cg_grappleFix           [0..9] Fix for demos that have been recorded with ja+ or other client:
                        0 = disabled, 1 = recorded with ja+ client, 4 = recorded with base client, other nums could help as well
cg_japlusFix            [0, 1] Fix for scores on ja+ scoreboard from demos that have been recorded with ja+ or other client:
                        0 = recorded with base client: only kills, 1 = recorded with ja+ client: kill/deathes

UAGALAXY JA+
cg_UAGColours           [0, 1, 2] Disable/enable support for new colours in UAG demos:
                        0 = disabed: uses default colour parser, 1 = enabled: only works if UAG demo detected, 2 = enabled: works for all demos



JAMME CLIENT (ENGINE)

mme_saveWav             [0, 1, 2] Record audio:
                        0 = disabled, 1 = record to wav, 2 = record to avi file (mme_screenShotFormat "avi")
mme_demoConvert         [0, 1] Convert demos to new .mme format for fast access to demo time; should be always ON for work with jamme
mme_demoSmoothen        [0, 1] Smooth demos that have been recorded with low cl_maxpackets and similar limiters
mme_demoFileName        [text] Resets when loading demo, uses demo name from current demo to convert to .mme file and to save demo stuff; use for needed saving pathes:
                        project/[mme_demoFileName]/, capture/[mme_demoFileName]/
mme_demoStartProject    [text] Set project that demoList feature will use in current demo; used by the game and usually not touched
mme_demoListQuit        [0, 1] Quit the game after completing capturing all demos from demoList feature
mme_demoAutoQuit        [0, 1] Quit the playing demo when it gets to its end
mme_demoRemove          [0, 1] Remove .mme demo after disconnecting to menu or quitting the mod
mme_demoPrecache        [0, 1] Precache models, skins and sounds that are used in a demo that user is going to watch to avoid lags during demo playback
                        (not recomended to people with little amount of RAM)

com_affinity            [bit-field: 1..32 in HEX] Set cores that the game will use (the game works very smoothly with 1 core)

fs_extraGames           [text text] Tell the game which mod folders it can load files from:
                        fs_extraGames "japlus" will load files from japlus folder like custom models and maps or
                        fs_extraGames "makermod japp" will load files from japp and makermod folders

s_doppler               [0, 1, 2] Enable doppler effect:
                        0 = disabled, 1 = original doppler, 2 = full doppler
s_dopplerSpeed          [-?.?..?.?] Adjust speed of full doppler effect (s_doppler 2)
s_dopplerFactor         [-?.?..?.?] Adjust speed coefficient of full doppler effect (s_doppler > 0)
s_timescale             [0, 1] Disable/enable sound speed scaling
s_forceScale            [0..5.0] Force sound speed (s_timescale 1)
s_mixSame               [0..?] How many same sounds can come from the same entity at the same time
s_mixSameTime           [0.0..?.?] Set range of "the same time" of "s_mixSame" cvar in seconds
s_attenuate             [0.0..?.?] Set sound attenuation range:
                        0.0 = all sounds are hearable everywhere, 1.0 = regular attenuation, >1.0 is lower hearing range.
                        Between 1.0 and 2.5 is probably the best choice.
s_effects               [0..6] Use the underwater sound effect:
                        0 = disabled, 1 = basic, 2 = circular, 3 = shuffle, 4 = split, 5 = double z, 6 = double h
                        Values over 0 are different instructions, but they produce almost the same effect.
com_soundMegs           [0..?] Set how many megabytes are allocated for sounds.

fx_forcePhysics         [0, bit-field: 1..8] Force .efx particles use bounce physics (usePhysics flag has to be set in .efx file for 1..4):
                        0 = disabled, only effects with certain flags will have physics, 1 = particles bounce from map objects,
                        2 = particles bounce from ghoul2 objects (player models, vehicles, npcs etc),
                        4 = particles bounce from bounding boxes, 8 = force all particles have physics (sets usePhysics flag)

cl_drawRecording        [0, 1, 2, 3] Change style of demo recording notifier:
                        0 = doesn't recording message, 1 = draw regular recording message,
                        2 = draw the red circle and REC in left down corner, 3 = same as 2, but the red circle blinks		
cl_autoDemo             [0, 1] Disable/enable autorecording demos
cl_autoDemoFormat       [text, %format] Set the autorecording demo name with certain formatting:
                        %d = date, %m = map, %n = custom name (2nd arguement in saveDemo command),
                        %p = player name, %t = time stamps, %s = server name, %% = %;
                        special date formatting:
                        %a: Abbreviated weekday name (Thu)
                        %A: Full weekday name (Thursday)
                        %b: Abbreviated month name (Aug)
                        %B: Full month name (August)
                        %D: Day of the month, zero-padded (01-31)
                        %H: Hour in 24h format (00-23)
                        %I: Hour in 12h format (01-12)
                        %j: Day of the year (001-366)
                        %N: Month as a decimal number (01-12)
                        %M: Minute (00-59)
                        %P: AM or PM designation
                        %S: Second (00-61)
                        %U: Week number with the first Sunday as the first day of week one (00-53)
                        %w: Weekday as a decimal number with Sunday as 0 (0-6)
                        %y: Year, last two digits (00-99)
                        %Y: Year (2001)
                        %Z: Timezone abbreviation (CDT)

cl_dlURL                [text] Set a download URL where to automatically download maps from (cl_allowDownload 0, yes, has to be "0")

con_timestamps          [0, 1] Hide/show timestamps in the console



JAMME RENDERER

mme_aviFormat           [0, 1] Compress AVI output with mpeg
mme_aviLimit            [0, 1] Limit AVI file size to 2 GB (unlimited AVI file may work wrong on some players)
mme_screenShotFormat    [jpg, png, tga, avi, pipe] Set output format
mme_screenShotGamma     [0, 1] Correct gamma in output
mme_screenShotAlpha     [0, 1] Capture alpha channel for PNG or TGA outputs

mme_jpegQuality         [0..100] Set quality for JPEG output
mme_jpegDownsampleChroma[0, 1] Currently does nothing
mme_jpegOptimizeHuffman [0, 1] Currently does nothing
mme_tgaCompression      [0, 1] Use lossless compression for TGA output
mme_pngCompression      [0..9] Lossless compression level for PNG output

mme_skykey              [0, 1..9, a..t, xHEXCOL] Set a colour for skybox; could be used as chroma key
mme_worldShader         [text] Replace environment textures with yours

mme_blurFrames          [0..256] Number of frames that will be merged into one
mme_blurType            [gaussian, triangle, median] Set different type of merging frames
mme_blurOverlap         [0..256] Set number of frames that will be additively merged in current one
mme_blurGamma           [0, 1] Correct gamma in every frame that will be merged
mme_blurJitter          [0..?.?] Jitter effect (random offset) power for blur frames
mme_blurStrength        [0, 1.0..?.?] Strength of blur frames blending (r_fbo 0)

mme_dofFrames           [0..256] Number of frames that will be captured at the same time with view offset each and merged into one to emulate realistic DOF
mme_dofRadius           [0.0..?.?] Set view offset for every dof frame (power of dof blur)

mme_renderWidth         [0, 1..?] Width of resolution that game will capture frames with in demoList feature
mme_renderHeight        [0, 1..?] Height of resolution that game will capture frames with in demoList feature
mme_workMegs            [1..512] Set megabytes that will be allocated for capturing output
mme_depthFocus          [0..?] Focus position from your current camera postion to given focus number (mme_saveDepth 1)
mme_depthRange          [0..?] Range from focus position to your camera direction and reversely from your camera direction (mme_saveDepth 1)

mme_saveOverwrite       [0, 1] Overwrite outputs with existing ones if their names match each other
mme_saveShot            [0, 1, 2] Save output:
                        0 = don't save regular output, 1 = merge blur frames (if have) and save, 2 = save every blur frame (if have) as a single frame
mme_saveDepth           [0, 1, 2] Save depth of field mask outputs:
                        0 = don't save dof output, 1 = merge dof blur frames (if have) and save, 2 = save every dof blur frame (if have) as a single frame

mme_cpuSSE2             [0, 1] Use SSE2 instruction to make motion blur (faster way, may crash on old CPUs)
mme_pbo                 [0, 1] Use PBO instruction to increase capture speed in times (r_stereoSeparation 0.0)
mme_pipeCommand         [text, %format] Set the command that opens its stdin for reading from the game raw input and set the supported output with the given format:
                        %o = output name, %f = fps (from capture command), %w = game width, %h = game height

r_zproj                 [0..?.?] Stereo focus position
r_stereoSeparation      [-?.?..?.?] Camera stereo offset by horizontal left-to-right axis by stereo focus position;
                        use not-null value to let the game capture stereo frames

r_multiSample           [0, 2, 4, 8] Anti-aliasing factor; use together with mme_renderWidth and mme_renderHeight in demoList feature
r_multiSampleNvidia     [0, 1] Let the game use Nvidia cards for anti-aliasing (r_multiSample > 0)
r_anisotropy            [0, 2, 4, 8, 16] Anisotropic filter factor

r_drawAllAreas          [0, 1] Allow drawing all the map rooms independantly on where the followed player is

r_ext_multisample       [0, 2, 4, 8] Anti-aliasing factor for SDL only

FRAME BUFFER OBJECT
r_fbo                   [0, 1] Use framebuffer object feature (r_fboWidth > 0 and r_fboHeight > 0)
r_fboMultiSample        [0, 2, 4, 8] Anti-aliasing in FBO mode (r_fbo 1; r_DynamicGlow 0; cg_shadows != 2);
                        the feature doesn't work together with volumetric shadows, dynamic glow,
                        disables distortion effect in force push/pull, boon, sphere shield, repeater orb
r_fboBlur               [0, 1, 2] Motion blur capture in FBO mode (very fast) (mme_blurFrames > 0; gpu or cpu with opengl 2.0 or higher support):
                        0 = disabled, 1 = 16 bit colour buffer, 2 = 32 bit colour buffer
r_fboWidth              [0..?] Width of resolution in FBO mode, not depended on current game resolution and will be fit in it
r_fboHeight             [0..?] Height of resolution in FBO mode, not depended on current game resolution and will be fit in it
