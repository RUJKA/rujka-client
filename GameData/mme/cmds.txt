Console commands:

Example mask:
command
    command subcommand/value ..., explanation              (default)
        command example, explanation
            result

JAMME CLIENT GAME

camera                  
    camera add/del, add/del a camera point at current viewpoint and time
    camera clear, clear all camera points. (Use with caution...)
    camera lock, lock the view to camera point or free moving
    camera shift time, move time indexes of camera points by certain amount
    camera next/prev, go to time index of next or previous point
    camera start/end, current time with be set as start/end of selection
    camera pos/angles (a)0 (a)0 (a)0, directly control position/angles, optional "a" before number to add to current value
    camera fov (a)0, directly control fov, optional "a" before number to add to current value
    camera target, clear/set the target currently being aimed at
    camera targetNext/Prev, go the next or previous player
    camera smoothPos 0-2, linear, catmullrom, bezier interpolation
    camera smoothAngles 0-1, linear, quaternion interpolation
    camera toggle value, xor the flags with this value
    camera smooth, smooth out the speed between select start/end
    camera move here/x y z, move the camera track to view position or directly move it around
    camera rotate pitch yaw roll, Rotate entire camera track around current view position

edit
    edit camera, switch to camera edit mode                (bound to 1)
    edit chase, switch to chase edit mode                  (bound to 2)
    edit line, switch to timeline edit mode                (bound to 3)
    edit none, hide demo hud and don't let edit anything   (bound to 4)
    (if selected either camera, or chase, or line):
    edit prev, edit previous keypoint                      (bound to Q)
    edit next, edit next keypoint                          (bound to E)
    edit lock, lock camera/chase/timeline                  (bound to R)
    edit add, add keypoint                                 (bound to V)
    edit del, delete current keypoint                      (bound to B)
    edit start, set selection start                        (bound to T)
    edit end, set selection end                            (bound to G)
    edit target, with +attack down choose a target for camera/chase;
	             without +attack you will sync the edit coordinates to current view

view
    view camera, change to camera view
    view chase, change to chase view
    view next/prev, change to next or previous view        (bound to X/Z)

chase
    chase add/del, add/del a chase point at current viewpoint and time
    chase clear, clear all chase points. (Use with caution...)
    chase lock, lock the view to chase track or free moving
    chase target, clear/set the target currently being aimed at
    chase targetNext/Prev, go the next or previous player
    chase shift time, move time indexes of chase points by certain amount
    chase next/prev, go to time index of next or previous point
    chase start/end, current time with be set as start/end of selection
    chase pos/angles (a)0 (a)0 (a)0, directly control position/angles, optional a before number to add to current value

speed
    speed 0.0..?.?, set speed of demo playback             (1.0)

seek
    seek 0.000..?.???, go to given time in seconds.milliseconds
        seek 20, will go to 0:20.000
        seek 133.7, will go to 2:13.700
    seek +?.???, go forward in time to given time in seconds.milliseconds
        seek +290, being at 2:13.700 it will go to 7:03.700; 290 = 4*60+50 -> 2+4:13+50.700 -> 6:63.700 -> 7:03.700
    seek -?.???, go backward in time to given time in seconds.milliseconds
        seek -290, being at 7:03.700 it will go to 2:13.700
        seek -1337, being at 7:03.700 it will go to 0:00.000; 7:03.700 -> 7*60+3.7 -> (423.7 - 1337) < 0 -> time cannot be negative

demoSeek
    demoSeek 0:00.000..?:??.???, go to given time in minutes:seconds.milliseconds
        demoSeek 13:33.37, will go to 13:33.370
        demoSeek 13, will go to 13:00.000
        demoSeek 13:82, will go to 14:22.000

pause
    pause, no value or subcommand, pauses/unpauses demo playback

capture
    capture jpg/tga/png/avi/pipe fps filename, start capturing to a specific file, demo has to be not paused
        capture avi 30 episode7, will start capturing AVI file with 30 frames per second framerate
                                 into capture/[mme_demoFileName]/episode7.000.avi (+001 after reaching 2GB filesize)
        capture png 30 episode8, will start capturing PNG screenshots into capture/[mme_demoFileName]/episode8.000000000.png
                                 (+000000001 each new screenshot) and each screenshot will be a frame of future video
        capture pipe 42 namek, will start capturing RAW stream with 42 frames per second into given pipeline (ffmpeg by default)
                               into capture/[mme_demoFileName]/namek[CUSTOM OUTPUT] (mme_pipeCommand)
    capture lock, lock capturing to the selected range
    capture start/end, set start/end parts of capture range
    capture stop, stop capturing

hudInit
    hudInit, no value or subcommand, initialize demo hud,
             called on demo startup and does not require reinitialize, thus never used

hudToggle
    hudToggle, no value or subcommand, switch between normal hud mode and editable hud

line
    line lock, lock timeline to use the keypoints
    line add, add timeline point for this demo/line time como
    line del, delete timeline keypoint
    line clear, clear all keypoints
    line speed value, demo speed when timeline unlocked
    line offset seconds, shift the demotime along the main time
    line start/end, set start/end parts of capture range

save
    save project demolist, saves a project file and an optional list file
        save episode7, will save episode7.cfg into project/[mme_demoFileName]/
        save episode7 list.txt, will save episode7.cfg into project/[mme_demoFileName]/
                                and list.txt into current folder (mme)

load
    load project, loads saved project
        load episode7, will try to load episode7.cfg from project/[mme_demoFileName]/,
                       so given name to mme_demoFileName cvar has to match given name in loading path

+seek
    +seek, no value or subcommand, enable moving in time by using mouse, arrows or strafe keys (bound to SHIFT, hold it)

-seek
    -seek, no value or subcommand, disable moving in time by using mouse, arrows or strafe keys (bound to SHIFT, unhold it)

clientOverride
    <subcommands>:
    list, view current settings, red tag means an override
    startNumber[-endNumber], select client or range of client
    player, override player who we recorded demo on
    red, override all player on red team
    blue, override all player on red team
    friendly, override all player on your team
    enemy, override all players who are on enemy team or everyone except our player if it's not team gametype
    all, override all players
    <subsubcommands, use them after subcommands above>:
    model "modelname/skin", change model
    n "name", change name
    t "0-3", change team number
    c1 "0-9,u-zHEXCOL", change saber color1, u-z - different blade styles from ja+, requires ja+ assets
    c2 "0-9,u-zHEXCOL", change saber color2
    hide "0,1", hide player yes or no
    st "hiltname", change saber hilt
    st2 "hiltname", change saber hilt2
    shader "shadername", shader override to be use on the whole player
                         if "shadername" is "2" then it will use cloaked shader with distortion (cg_renderToTextureFX 1)
    effect "effectname", effect .efx to run from the player's position; effects should be put in "effects" folder and optionally in its subfolders
        clientOverride list, result:
            client 0  n Scooper t 0 model cultist/green c1 2 c2 2 st single_3 st2 single_3
            client 1  n ent t 0 model jan/red c1 2 c2 2 st single_1 st2 none
            client 2  n Raz0r t 0 model jedi_zf/head_c1|torso_e1|lower_d1 c1 6 c2 6 st single_6 st2 none

            player
            red
            blue
            friendly
            enemy
            all
        clientOverride 0-1 n jamme, result:
            client 0  n Scooper t 0 model cultist/green c1 2 c2 2 st single_3 st2 single_3
            Override: \n\jamme
            client 1  n ent t 0 model jan/red c1 2 c2 2 st single_1 st2 none
            Override: \n\jamme
            client 2  n Raz0r t 0 model jedi_zf/head_c1|torso_e1|lower_d1 c1 6 c2 6 st single_6 st2 none

            player
            red
            blue
            friendly
            enemy
            all
        clientOverride all model kyle, result:
            client 0  n Scooper t 0 model cultist/green c1 2 c2 2 st single_3 st2 single_3
            Override: \n\jamme
            client 1  n ent t 0 model jan/red c1 2 c2 2 st single_1 st2 none
            Override: \n\jamme
            client 2  n Raz0r t 0 model jedi_zf/head_c1|torso_e1|lower_d1 c1 6 c2 6 st single_6 st2 none

            player
            red
            blue
            friendly
            enemy
            all
            Override: \model\kyle
        clientOverride 2 c1 uFF2700, result:
            client 0  n Scooper t 0 model cultist/green c1 2 c2 2 st single_3 st2 single_3
            Override: \n\jamme
            client 1  n ent t 0 model jan/red c1 2 c2 2 st single_1 st2 none
            Override: \n\jamme
            client 2  n Raz0r t 0 model jedi_zf/head_c1|torso_e1|lower_d1 c1 6 c2 6 st single_6 st2 none
            Override: \c1\uFF2700

            player
            red
            blue
            friendly
            enemy
            all
            Override: \model\kyle
        clientOverride 0 st single_1, result:
            client 0  n Scooper t 0 model cultist/green c1 2 c2 2 st single_3 st2 single_3
            Override: \st\single_1\n\jamme
            client 1  n ent t 0 model jan/red c1 2 c2 2 st single_1 st2 none
            Override: \n\jamme
            client 2  n Raz0r t 0 model jedi_zf/head_c1|torso_e1|lower_d1 c1 6 c2 6 st single_6 st2 none
            Override: \c1\uFF2700

            player
            red
            blue
            friendly
            enemy
            all
            Override: \model\kyle

musicPlay
    musicPlay [length], will play selected audio file in mov_musicFile for some seconds to find synchronization point
        musicPlay, will play 2 seconds music
        musicPlay 10, will play 10 seconds music

find
    find death, will fast forward a demo until a moment when someone dies
    find direct, will fast forward a demo until a moment when someone dies with direct shot (flechette and concussion are not supported)
    find airkill, will fast-forward a demo until a moment when someone dies in air by anything but splash damage or selfkill

stopLoop
    stopLoop, no value or subcommand, stops all looping sounds which are called by events (mostly force powers looping sounds)
              helpful if looping sound is called multiple times after doing some backward and forward playback

trueView
    trueView, no value or subcommand, fully enables trueview for all melee, saber and guns or fully disables it

dof
    dof add/del, add/del a dof point at current viewpoint and time
    dof clear, clear all dof points. (Use with caution...)
    dof lock, lock dof to use the keypoints
    dof shift time, move time indexes of dof points by certain amount
    dof next/prev, go to time index of next or previous point
    dof start/end, current time with be set as start/end of selection
    dof focus (a)0, Directly control focus, optional a before number to add to current value
    dof radius (a)0, Directly control radius, optional a before number to add to current value
    dof target, Clear/Set the target currently being focused at

sun
    sun on/enable/e/activate/a, enable/disable sun effect
    sun size/scale/s 0, change sun size
    sun precision/pr 0, how smoothly sun fades near borders
    sun yaw/y 0, left/right sun rotation
    sun pitch/p 0, up/down sun rotation

rain
    rain on/enable/e/activate/a, enable/disable rain effect
    rain number/amount/quantity/num/n 0, number of rain drops
    rain range/r/distance/d 0, how far rain can appear

cut
    cut it, cut the currently playing demo with the set range		(bound to /)
    cut start/end, current time will be set as start/end of cutting	(bound to [ and ])



JAMME CLIENT (ENGINE)

mmeDemo
    mmeDemo filename, load a demo in .mme format (has to be converted at first) from "mmedemos" folder
        mmeDemo aaaa/mysuperdemo, will load mysuperdemo.mme from mmedemos/aaaa/
                                  or will convert demo mysuperdemo.dm_26 from demos/aaaa/ and load
demoList
    demoList filename, load bunch of demos together with their projects to capture them all on background,
                       that file should have lines with "demoname" "projectname", these will be played after each other

demoListNext
    demoListNext, play next demo from the list of demos, usually called by the game after finish capturing a demo from the list

demoCut
    demoCut start end, cut the currently playing demo with the given start-end range in seconds.milliseconds;
                       uset "cut" command from JAMME CLIENT GAME for the better experience

saveDemo
    saveDemo [demoName], will save the autorecording demo at the end of match with the name format provided with [cl_autoDemoFormat]
                         with time stamps added in the name each time the command called
                         and with optional [demoname] word in it if [cl_autoDemoFormat] contains %n
        saveDemo, if called at 13:00 on map mp/ffa2 then it will save the demo with name 1300_ffa2.dm_26 if [cl_autoDemoFormat] is %t_%m;
                  if it's later called again in the same match at 13:37 then the demo name will be 1300_1337_ffa2.dm_26 if [cl_autoDemoFormat] is %t_%m

saveDemoLast
    saveDemoLast [demoName], will save the last autorecorded demo in the previous match with either the an autogenerated name or with an optional [demoname] name

mute
    mute, no value or subcommand, mutes or unmutes audio



JAMME RENDERER

screenshotTGA
    screenshotTGA levelshot, will capture a screenshot in TGA format in "levelshot" folder for using it as a levelshot for a map
    screenshotTGA silent, will capture a screenshot in TGA format in "screenshots" without a console notifier message
    screenshotTGA name, will capture a screenshot in TGA format in "screenshots" with given name
        screenshotTGA testname, will capture a screenshot testname.tga in "screenshots" folder

screenshotJPEG
    screenshotJPEG levelshot, will capture a screenshot in JPG format in "levelshot" folder for using it as a levelshot for a map
    screenshotJPEG silent, will capture a screenshot in JPG format in "screenshots" without a console notifier message
    screenshotJPEG name, will capture a screenshot in JPG format in "screenshots" with given name
        screenshotJPEG testname, will capture a screenshot testname.jpg in "screenshots" folder

screenshotPNG
    screenshotPNG levelshot, will capture a screenshot in PNG format in "levelshot" folder for using it as a levelshot for a map
    screenshotPNG name, will capture a screenshot in PNG format in "screenshots" with given name
        screenshotPNG testname, will capture a screenshot testname.png in "screenshots" folder

screenshotDOF
    screenshotDOF name, will capture a screenshot in [mme_screenShotFormat] format in "screenshots" with given name
        screenshotDOF testname, will capture a screenshot testname.[mme_screenShotFormat] in "screenshots" folder
    screenshotDOF name focus radius, same as above but also with given DOF focus and radius
        screenshotDOF testname 133.7 1.337, will capture a screenshot testname.[mme_screenShotFormat] in "screenshots" folder
                                            with focus point on 133.7 position from camera and with the burring radius 1.337